name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Detect package manager
        id: pm
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Setup pnpm
        if: steps.pm.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        shell: bash
        run: |
          if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then
            pnpm install --frozen-lockfile
          elif [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi

      - name: Build
        shell: bash
        run: |
          # Set BASE_PATH for Vite so assets resolve on GitHub Pages
          REPO_NAME="${{ github.event.repository.name }}"
          if [[ "$REPO_NAME" == *.github.io ]]; then
            echo "BASE_PATH=/" >> $GITHUB_ENV
          else
            echo "BASE_PATH=/$REPO_NAME/" >> $GITHUB_ENV
          fi

          if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then
            pnpm run build
          elif [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then
            yarn build
          else
            npm run build
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Detect build output directory
        id: outdir
        shell: bash
        run: |
          if [ -d dist ]; then
            echo "dir=dist" >> $GITHUB_OUTPUT
          elif [ -d build ]; then
            echo "dir=build" >> $GITHUB_OUTPUT
          else
            echo "No build directory (dist or build) found after build." >&2
            exit 1
          fi

      - name: Add SPA fallback (404.html)
        shell: bash
        run: |
          cp "${{ steps.outdir.outputs.dir }}/index.html" "${{ steps.outdir.outputs.dir }}/404.html"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.outdir.outputs.dir }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
